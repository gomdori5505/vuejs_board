{"version":3,"sources":["webpack:///./src/views/Update.vue?2ffa","webpack:///src/views/Update.vue","webpack:///./src/views/Update.vue?43de","webpack:///./src/views/Update.vue","webpack:///../../../src/components/VForm/VForm.ts","webpack:///../../../src/components/VTextarea/VTextarea.ts"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","_v","staticClass","ref","brdTitle","model","value","callback","$$v","expression","brdWriter","brdContent","on","$event","update","staticRenderFns","component","VBtn","VFlex","VForm","VLayout","VTextField","VTextarea","name","provide","form","inheritAttrs","props","disabled","lazyValidation","readonly","Boolean","data","inputs","watchers","errorBag","watch","handler","errors","Object","deep","immediate","methods","watchInput","watcher","input","val","_uid","valid","shouldValidate","validate","filter","reset","resetErrorBag","setTimeout","resetValidation","register","unregister","found","find","i","unwatch","h","novalidate","attrs$","submit","e","$slots","baseMixins","autoGrow","noResize","rowHeight","type","Number","default","validator","v","isNaN","parseFloat","rows","parseInt","computed","classes","noResizeHandle","lazyValue","$nextTick","mounted","calculateInputHeight","$refs","height","minHeight","Math","genInput","onInput","onKeyDown","isFocused"],"mappings":"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","file":"js/update.607c1b47.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',[_c('v-flex',{attrs:{\"text-sm-center\":\"\"}},[_c('h1',[_vm._v(\"Board Write\")]),_c('v-form',{staticClass:\"ma-10\"},[_c('v-text-field',{ref:\"제목\",attrs:{\"rules\":[function () { return !!_vm.brdTitle || 'This field is required'; }],\"label\":\"제목\",\"required\":\"\"},model:{value:(_vm.brdTitle),callback:function ($$v) {_vm.brdTitle=$$v},expression:\"brdTitle\"}}),_c('v-text-field',{ref:\"작성자\",attrs:{\"rules\":[function () { return !!_vm.brdWriter || 'This field is required'; }],\"label\":\"작성자\",\"required\":\"\"},model:{value:(_vm.brdWriter),callback:function ($$v) {_vm.brdWriter=$$v},expression:\"brdWriter\"}}),_c('v-textarea',{ref:\"내용\",attrs:{\"rules\":[function () { return !!_vm.brdContent || 'This field is required'; }],\"label\":\"내용\",\"counter\":\"\",\"maxlength\":\"240\"},model:{value:(_vm.brdContent),callback:function ($$v) {_vm.brdContent=$$v},expression:\"brdContent\"}}),_c('v-btn',{on:{\"click\":function($event){return _vm.update()}}},[_vm._v(\"수정\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <v-layout>\n        <v-flex text-sm-center>\n            <h1>Board Write</h1>\n            <v-form class=\"ma-10\">\n                <v-text-field\n                    ref=\"제목\"\n                    v-model=\"brdTitle\"\n                    :rules=\"[() => !!brdTitle || 'This field is required']\"\n                    label=\"제목\"\n                    required\n                ></v-text-field>\n                <v-text-field\n                    ref=\"작성자\"\n                    v-model=\"brdWriter\"\n                    :rules=\"[() => !!brdWriter || 'This field is required']\"\n                    label=\"작성자\"\n                    required\n                ></v-text-field>\n                <v-textarea\n                    ref=\"내용\"\n                    v-model=\"brdContent\"\n                    :rules=\"[() => !!brdContent || 'This field is required']\"\n                    label=\"내용\"\n                    counter\n                    maxlength=\"240\"\n                ></v-textarea>\n                <v-btn @click=\"update()\">수정</v-btn>\n            </v-form>\n        </v-flex>\n    </v-layout>\n</template>\n\n<script>\nimport { dateFormat } from \"../mixins/dateFormat\"\nexport default {\n    data() {\n        return {\n            uniKey: this.$route.params.id,\n            brdTitle: null,\n            brdWriter: null,\n            brdContent: null,\n        }\n    },\n    created() {\n        this.$firebase.database().ref().child(this.uniKey).on('value', (sn) => {\n            const listData = sn.val();\n            this.brdTitle = listData.brdTitle;\n            this.brdWriter = listData.brdWriter;\n            this.brdContent = listData.brdContent;\n        });\n    },\n    methods: {\n        update() {\n            if(this.brdTitle == \"\" || this.brdWriter == \"\" || this.brdContent == \"\") {\n                alert(\"please fill in the blank!\");\n            } else {           \n                this.$firebase.database().ref().child(this.uniKey).update({\n                    brdTitle: this.brdTitle,\n                    brdWriter: this.brdWriter,\n                    brdContent: this.brdContent,\n                    brdEditDate: this.getTimestamp(),\n                });\n                \n                this.$router.push({\n                    name: 'read',\n                    params: {\n                        id: this.uniKey\n                    }\n                });\n            }\n        }\n    },\n    mixins: [dateFormat]\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Update.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Update.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Update.vue?vue&type=template&id=2694eb0e&\"\nimport script from \"./Update.vue?vue&type=script&lang=js&\"\nexport * from \"./Update.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VFlex } from 'vuetify/lib/components/VGrid';\nimport { VForm } from 'vuetify/lib/components/VForm';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\nimport { VTextarea } from 'vuetify/lib/components/VTextarea';\ninstallComponents(component, {VBtn,VFlex,VForm,VLayout,VTextField,VTextarea})\n","// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  provide (): object {\n    return { form: this }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n","// Styles\nimport './VTextarea.sass'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport Vue from 'vue'\n\ninterface options extends Vue {\n  $refs: {\n    input: HTMLTextAreaElement\n  }\n}\n\nconst baseMixins = mixins<options &\n  InstanceType<typeof VTextField>\n>(\n  VTextField\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-textarea',\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseInt(v, 10)),\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.options.computed.classes.call(this),\n      }\n    },\n    noResizeHandle (): boolean {\n      return this.noResize || this.autoGrow\n    },\n  },\n\n  watch: {\n    lazyValue () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n    rowHeight () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (!input) return\n\n      input.style.height = '0'\n      const height = input.scrollHeight\n      const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n      // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n      input.style.height = Math.max(minHeight, height) + 'px'\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data!.attrs!.type\n      input.data!.attrs!.rows = this.rows\n\n      return input\n    },\n    onInput (e: Event) {\n      VTextField.options.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation()\n      }\n\n      this.$emit('keydown', e)\n    },\n  },\n})\n"],"sourceRoot":""}